@model RedactApplication.Models.TEMPLATEViewModel
@{
    ViewBag.Title = "CreateTemplate";
    Layout = "~/Views/Shared/LayoutConnected.cshtml";
}

@section Scripts{


    <script>
        $(document).ready(function () {
            
            $('select[name="ftpdirs"]').hide();
            $(".save-template").hide();    
            $(".ftp-error").hide();      
           
            $('#ftpList').click(function () {
                var url = $("#url").val();
                var ftpUser = $("#ftpUser").val();
                var ftpPassword = $("#ftpPassword").val();
                var ftp_obj = { "url": url, "ftpUser": ftpUser, "ftpPassword": ftpPassword };
                var el = $('select[name="ftpdirs"]');
                $.ajax({
                    url: '/Template/RefreshFtp',
                    type: "POST",
                    data: ftp_obj,
                    cache: false,
                    async: true,
                    success: function (resp) {
                        if (resp == "error") {
                            $(".ftp-error").show();      
                        } else {
                            $(".ftp-error").hide();      
                            el.show();
                            $(".save-template").show();
                            var data = resp.split(",");

                            var htmlOptions = [];
                            if (data.length) {
                                for (item in data) {
                                    html = '<option value="' + data[item] + '">' + data[item] + '</option>';
                                    htmlOptions[htmlOptions.length] = html;
                                }
                                el.empty().append(htmlOptions.join(''));
                            }
                        }                     

                    }
                });               
            });

            $("#THEME_theme_name").autocomplete({

                source: function (request, response) {
                    $.ajax({

                        type: 'GET',
                        url: '/Template/AutocompleteThemeSuggestions',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",

                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            console.log(data);
                            response($.map(data, function (val, item) {

                                return {
                                    value: val.Text,
                                    text: val.Value
                                }
                            }))
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    })
                },
                select: function (event, ui) {
                    $("#tag").val(ui.item.text);
                    console.log($("#tag").val(ui.item.text));
                },
                minLength: 1
            });

        });
    </script>
}


    <main id="wrapper">
        <div id="single-container">
                <div class="onglets ease-in-out">
                    <ul>
                        <li>@Html.ActionLink("Dashboard", "ListTemplate", new { controller = "Template" })</li>
                        <li>@Html.ActionLink("Creation Site", "ChoiceTemplate", new { controller = "Template" }, new { @class = "active" })</li>
                    </ul>
                </div>
                <div class="theme-select grey-bg">
                </div>

                @using (Html.BeginForm("SaveTemplate", "Template", FormMethod.Post, new { role = "form", @id = "createtemplate" }))
                {
                    @Html.AntiForgeryToken()
                    <section class="theme-customization clearfix">
                        <div class="section-title">
                            <span>Créer / Ajouter un modèle</span>
                        </div>
                        <div class="col-md-5">
                            <div class="blk">
                                <strong>Choisir un projet</strong>
                                @Html.DropDownListFor(x => Model.listprojetId, new SelectList(Model.ListProjet, "Value", "Text"), htmlAttributes: new { @id = "SelectItemProjet", @required = true })
                            </div> 
                        </div>
                        <div class="col-md-2">
                            <span
                                style="
                                text-align: center;
                                font-size: 24px;
                                display: inline-block;
                                vertical-align: middle;
                                line-height: 5.5em;
                                width: 100%;"
                            >
                            Ou bien
                        </span>
                        </div>
                        <div class="col-md-5">
                            <div class="blk">
                                <strong>Ajouter un nouveau projet</strong>
                                <span class="btn-add" data-toggle="modal" data-target="#createprojet">Nouveau projet</span>
                            </div>                            
                        </div>
                        
                        <!-- contenu bloc 1 -->
                        <div class="section-title clearfix">
                            <span>Préférences</span>
                        </div>
                        <div class="col-md-6"> 
                            <div class="blk clearfix">
                                <label for="">
                                    <strong>Thématique</strong>
                                    @*@Html.DropDownListFor(x => Model.listThemeId, new SelectList(Model.ListTheme, "Value", "Text"), htmlAttributes: new { id = "SelectItemTheme", @required = true })*@
                                    @Html.EditorFor(model => model.THEME.theme_name, new { htmlAttributes = new { @placeholder = "Saisir Thème" } })
                                </label>
                            </div>
                        </div>
                        <div class="col-md-6"> 
                            <div class="blk clearfix">
                                <label for="">
                                    <strong>IP</strong>
                                    @Html.TextBoxFor(x => x.ip, new { @required = true })
                                </label>
                            </div>
                        </div>

                        <div class="col-md-4"> 
                            <div class="blk clearfix">
                                <label for="">
                                    <strong>FTP hôte</strong>
                                    @Html.TextBoxFor(x => x.url, new { @required = true, @placeholder ="Adresse de l'hôte" })
                                </label>
                            </div>
                        </div>
                        <div class="col-md-4"> 
                            <div class="blk clearfix">
                                <label for="">
                                    <strong>Utilisateur</strong>
                                    @Html.TextBoxFor(x => x.ftpUser, new { @name = "name", @required = true, @placeholder ="Identifiant" })
                                </label>
                            </div>
                        </div>
                        <div class="col-md-4"> 
                            <div class="blk clearfix">
                                <label for="">
                                    <strong>Mot de passe</strong>
                                    @Html.TextBoxFor(x => x.ftpPassword, new { required = true, @name = "name", @placeholder = "********" })
                                </label>
                            </div>
                        </div>
                        <div class="col-md-12" style="text-align: center;"> 
                            <input type="button" value="Récupérer dossiers FTP" id="ftpList" class="btn btn-success"/>
                            <select id="ftpdir" name="ftpdirs"></select>
                        </div>
                    </section>

                    <section class="clearfix submit-area save-template">
                        <input type="submit" value="Enregistrer" class="btn btn-success" />
                        @Html.ActionLink("Annuler", "ChoiceTemplate", "Template", new { @class = "btn btn-warning" })
                    </section>
                }
            </div>
        </div>

        <div id="createprojet" class="modal modal-popup">
            <div class="flex-content flex-jcenter-acenter flex-col pop-up">
                <div class="popup-container with-shadow">
                    <div class="head gradient-blue">
                        <h1>Nouveau projet</h1>
                    </div>
                    <div class="content-section text-centered icon-bottom">

                        @using (Html.BeginForm("CreateProjet", "Template", FormMethod.Post))
                        {

                            <label for="" class="col-100 ">
                                Nom du projet(*)
                                @Html.TextBoxFor(x => x.PROJET.projet_name, new { @required = true })
                            </label>

                            <input type="submit" value="Enregistrer" class="btn btn-primary ">
                            @Html.ActionLink("Annuler", "CreateTemplate", new { controller = "Template" }, new { @class = "btn btn-warning" })
                        }

                    </div>
                </div>

            </div>

        </div>

    </main>










